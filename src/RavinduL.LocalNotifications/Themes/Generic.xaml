<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:presenters="using:RavinduL.LocalNotifications.Presenters">

	<Style TargetType="presenters:SimpleNotificationPresenter">
		<Setter Property="Background" Value="DarkGreen" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="presenters:SimpleNotificationPresenter">
					<Grid
						x:Name="LayoutRoot"
						Width="500"
						HorizontalAlignment="Center"
						VerticalAlignment="Top"
						ManipulationMode="TranslateY">
						<Grid.Resources>
							<Storyboard x:Name="ShowStoryboard">
								<DoubleAnimation
									x:Name="ShowAnimation"
									Storyboard.TargetName="LayoutRoot"
									Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
									To="0"
									Duration="0:0:0.1" />
							</Storyboard>

							<Storyboard x:Name="HideStoryboard">
								<DoubleAnimation
									x:Name="HideAnimation"
									Storyboard.TargetName="LayoutRoot"
									Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
									Duration="0:0:0.1" />
							</Storyboard>

							<Storyboard x:Name="RestoreStoryboard">
								<DoubleAnimation
									x:Name="RestoreAnimation"
									Storyboard.TargetName="LayoutRoot"
									Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
									To="0"
									Duration="0:0:0.1" />
							</Storyboard>
						</Grid.Resources>

						<Grid.RenderTransform>
							<TranslateTransform />
						</Grid.RenderTransform>

						<Grid
							x:Name="TitleBarBackgroundGrid"
							Height="52"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Top"
							Background="{TemplateBinding Background}"
							Visibility="Collapsed">
							<Grid.RenderTransform>
								<!-- 32, the height of the title bar + 20, the distance that LayoutRoot can be pulled down. -->
								<TranslateTransform Y="-52" />
							</Grid.RenderTransform>
						</Grid>

						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">

							<Grid RequestedTheme="Dark">

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Grid x:Name="Target">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<FontIcon
										Margin="15,0,0,0"
										VerticalAlignment="Center"
										Foreground="{TemplateBinding Foreground}"
										Glyph="{TemplateBinding Glyph}" />

									<TextBlock
										Grid.Column="1"
										Margin="15"
										Foreground="{TemplateBinding Foreground}"
										Text="{TemplateBinding Text}"
										TextWrapping="WrapWholeWords" />
								</Grid>

								<Button
									x:Name="HideButton"
									Grid.Column="1"
									Padding="15"
									VerticalAlignment="Stretch"
									Background="Transparent"
									BorderThickness="0">

									<FontIcon Foreground="{TemplateBinding Foreground}" Glyph="&#xE10A;" />
								</Button>
							</Grid>
						</Border>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup>
								<VisualState>
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="0" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="HideButton.Visibility" Value="Collapsed" />
										<Setter Target="LayoutRoot.HorizontalAlignment" Value="Stretch" />
										<Setter Target="LayoutRoot.Width" Value="Auto" />
										<Setter Target="TitleBarBackgroundGrid.Visibility" Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState>
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="640" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
